use v6.c;
use Test;

use lib 'lib';
use DBIish;
use MyJudo;

my $mj = MyJudo.new(
    dbh => DBIish.connect("SQLite", :database<db/test.db>)
);

subtest {
	my $sth = $mj.dbh.do('DELETE FROM users');

	$mj.add_new_user(
	    user_name => 'test',
	    password  => 'secret',
	);

	$sth = $mj.dbh.prepare('SELECT id,username from users');
	$sth.execute;
	my %user = $sth.row(:hash);

	is %user, {
	    id => 1,
	    username => 'test',
	}, 'New user is added';

	done-testing;
}, 'add_new_user';

subtest { 
	my $sth = $mj.dbh.do('DELETE FROM sensei');

	$mj.add_sensei(
	    family_name => 'last',
	    given_name  => 'first',
	);

	$sth = $mj.dbh.prepare('SELECT * from sensei');
	$sth.execute;
	my %sensei = $sth.row(:hash);

	is-deeply %sensei, {
	    family_name => 'Last',
            given_name  => 'First',
            id          => 1,
            their_sensei => Any,
	}, 'Sensei record is correct';
	done-testing;
}, 'add_sensei';

todo '';	subtest { done-testing; }, 'get_admin_dashboard_data';

subtest { 
	my $sth = $mj.dbh.do('DELETE FROM sensei');

	$mj.add_sensei(
	    family_name => 'last',
	    given_name  => 'first',
	);
   
	my %sensei = $mj.get_sensei_by_name(family_name => 'last', given_name => 'first');
	is-deeply %sensei, {
	    family_name => 'Last',
            given_name  => 'First',
            id          => 1,
            their_sensei => Any,
	}, 'Sensei record is correct';

    done-testing; 
}, 'get_sensei_by_name';

todo '';	subtest { done-testing; }, 'get_user_data';
todo '';	subtest { done-testing; }, 'is_user_linked_to_sensei';
todo '';	subtest { done-testing; }, 'is_username_taken';
todo '';	subtest { done-testing; }, 'link_user_to_sensei';
todo '';	subtest { done-testing; }, 'valid_user_credentials';


done-testing;
